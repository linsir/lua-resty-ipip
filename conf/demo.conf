    # 设置默认 lua 搜索路径，添加 lua 路径
    lua_package_path "/usr/local/openresty/ipip-demo/?.lua;;";
    lua_code_cache off;
    resolver 223.5.5.5;
    init_by_lua '
        local ipip = require "resty.ipip.ipip"
        cjson = require "cjson"
        ipipc = ipip:new("9a8bc1a059db4a14b4feb0f38db38bbf4d5353ab1")
    ';
    server {
        listen 8000;
        charset utf-8;
        # server_name ip.linsir.org;
        default_type text/plain;
        root /usr/local/openresty/nginx/html;

        location /ip {
            content_by_lua '
                local ipipc = ipipc
                local cjson = cjson
                local res, err = ipipc:query_file("202.103.026.255")
                if not res then
                    ngx.say(err)
                    return
                end
                ngx.say(cjson.encode(res))
            ';
        }

        location /free_api {
            content_by_lua '
                local ipipc = ipipc
                local cjson = cjson
                local res, err = ipipc:query_free_api("202.103.026.255")
                if not res then
                    ngx.say(err)
                    return
                end
                ngx.say(cjson.encode(res))
            ';
        }

        location /api {
            content_by_lua '
                local ipipc = ipipc
                local cjson = cjson
                local res, err = ipipc:query_api("202.103.026.255")
                if not res then
                    ngx.say(err)
                    return
                end
                ngx.say(cjson.encode(res))
            ';
        }

        location /api_status {
            content_by_lua '
                local ipipc = ipipc
                local cjson = cjson
                local res, err = ipipc:api_status()
                if not res then
                    ngx.say(err)
                    return
                end
                ngx.say(cjson.encode(res))
            ';
        }

        error_log  logs/ip_error_log info;
    }